CREATE OR REPLACE PACKAGE BODY wbspkgdts
IS

   PROCEDURE wbsprcselclidt00901
   AS

   LSCLIENT WBSTBLINTFCLIEN_AUX.SCLIENT%TYPE;
   LCOUNTER WBSTBLINTFCLIEN_AUX.SCLIENT%TYPE;
   LNSEQUENCE WBSTBLINTFCLIEN_AUX.SCLIENT%TYPE;
   TMP              sys_refcursor;

   CLI_SCLIENT            CLIENT.SCLIENT%TYPE;
   CLI_SCLIENAME          CLIENT.SCLIENAME%TYPE;
   SCLIENTOLD             CHAR(11);
   CLI_NPERSON_TYP        CLIENT.NPERSON_TYP%TYPE;
   CLI_DBIRTHDAT          CLIENT.DBIRTHDAT%TYPE;
   CLI_SSEXCLIEN          CLIENT.SSEXCLIEN%TYPE;
   CLI_NCIVILSTA          CLIENT.NCIVILSTA%TYPE;
   CLI_NNATIONALITY       CLIENT.NNATIONALITY%TYPE;
   CLI_SFIRSTNAME         CLIENT.SFIRSTNAME%TYPE;
   CLI_SLASTNAME          CLIENT.SLASTNAME%TYPE;
   CLI_SLASTNAME2         CLIENT.SLASTNAME2%TYPE;
   CLI_NUSERCODE          CLIENT.NUSERCODE%TYPE;
   CLI_DCOMPDATE          CLIENT.DCOMPDATE%TYPE;
   CLI_SBLOCKADE          CHAR(2);
   CLI_SBLOCKADE_IQ       CHAR(2);
   CLI_DINPDATE           CLIENT.DINPDATE%TYPE;
   SRUC_AUX               CLIDOCUMENTS.SCLINUMDOCU%TYPE;
   NTYPDOC_DNI            CLIDOCUMENTS.NTYPCLIENTDOC%TYPE;
   SDNI_AUX               CLIDOCUMENTS.SCLINUMDOCU%TYPE;
   NTYPDOC_RUC            CLIDOCUMENTS.NTYPCLIENTDOC%TYPE;
   ADD_BILL_SDESCADD      ADDRESS.SDESCADD%TYPE;
   ADD_BILL_NZIP_CODE     ADDRESS.NZIP_CODE%TYPE;
   ADD_BILL_SZONE         GEOGRAPHICZONE_2.SDESCRIPT%TYPE;
   ADD_HOME_SDESCADD      ADDRESS.SDESCADD%TYPE;
   ADD_HOME_NZIP_CODE     ADDRESS.NZIP_CODE%TYPE;
   ADD_HOME_SZONE         GEOGRAPHICZONE_2.SDESCRIPT%TYPE;
   ADD_SKEYADDRESS        ADDRESS.SKEYADDRESS%TYPE;
   USE_NUSERCODE          USERS.NUSERCODE%TYPE;
   USE_SSCHE_CODE         USERS.SSCHE_CODE%TYPE;
   USE_SACCESSWO          USERS.SACCESSWO%TYPE;
   USE_SINITIALS          USERS.SINITIALS%TYPE;
   USE_NDEPARTME          USERS.NDEPARTME%TYPE;
   USE_NOFFICE            USERS.NOFFICE%TYPE;
   USE_STYPE              USERS.STYPE%TYPE;
   BILL_SPHONE1           PHONES.SPHONE%TYPE;
   BILL_SPHONE2           PHONES.SPHONE%TYPE;
   HOME_SPHONE1           PHONES.SPHONE%TYPE;
   HOME_SPHONE2           PHONES.SPHONE%TYPE;
   ADD_SE_MAIL            ADDRESS.SE_MAIL%TYPE;
   IQ_NIQCIVILSTA         IQ_EQ_CIVILST.NIQCIVILSTA%TYPE;
   CLI_SICLIENTNAM        CLIENT.SCLIENAME%TYPE;
   CLI_SOFFDESC           TABLE9.SDESCRIPT%TYPE;
   CLI_NOCCUPAT            NUMBER(5);
   CLI_SACCOUNT_IN        CLIENT.SACCOUNT_IN%TYPE;
   CLI_NCLASSHEALTH       CLIENT.NCLASSHEALTH%TYPE;
   CLI_DDEATHDATE         CLIENT.DDEATHDAT%TYPE;
   CLI_NHEIGHT            CLIENT.NHEIGHT%TYPE;
   CLI_NHOUSE_TYPE        CLIENT.NHOUSE_TYPE%TYPE;
   CLI_NQ_CARS            CLIENT.NQ_CARS%TYPE;
   CLI_NQ_CHILD           CLIENT.NQ_CHILD%TYPE;
   CLI_SSMOKING           CLIENT.SSMOKING%TYPE;
   CLI_NWEIGHT            CLIENT.NWEIGHT%TYPE;
   CLI_NECONOMIC_L        CLIENT.NECONOMIC_L%TYPE;
   CLI_NAREA              CLIENT.NAREA%TYPE;
   CLI_NPERTITLE          CLIENT.NPERTITLE%TYPE;
   SCUI_AUX               CLIDOCUMENTS.SCLINUMDOCU%TYPE;
   NTYPDOC_CUI            CLIDOCUMENTS.NTYPCLIENTDOC%TYPE;
   CLI_NUSERBLOCKADE      CLIENT_BLOCKHIS.NUSERBLOCKADE%TYPE;
   CLI_NCAUSEBLOCKADE     CLIENT_BLOCKHIS.NCAUSEBLOCKADE%TYPE;
   ADD_BILL_NCOUNTRY      ADDRESS.NCOUNTRY%TYPE;
   ADD_BILL_SREFERENCE    ADDRESS.SREFERENCE%TYPE;
   ADD_HOME_NCOUNTRY      ADDRESS.NCOUNTRY%TYPE;
   ADD_HOME_SREFERENCE    ADDRESS.SREFERENCE%TYPE;
   SOTHERDOCUMENT         CLIDOCUMENTS.SCLINUMDOCU%TYPE;
   NTYPDOC_OTHERDOC       CLIDOCUMENTS.NTYPCLIENTDOC%TYPE;
   ADD_BILL_NCOUNTRY_IQ   ADDRESS.NCOUNTRY%TYPE;
   ADD_HOME_NCOUNTRY_IQ   ADDRESS.NCOUNTRY%TYPE;
   ADD_HOME_DCOMPDATE     ADDRESS.DCOMPDATE%TYPE;
   ADD_BILL_DCOMPDATE     ADDRESS.DCOMPDATE%TYPE;
   SCODERRORS             VARCHAR2(255);
   SSEGM_ACC          CLIENT.SSEGM_ACC%TYPE;
   CLI_NRISKIND       CLIENT.NRISKIND%TYPE;
   CLI_DRISKDATE      CLIENT.DRISKDATE%TYPE;

   CURSOR cliente_aux IS
        SELECT SCLIENT, COUNTER, NSEQUENCE
        FROM WBSTBLINTFCLIEN_AUX;

   BEGIN
     OPEN cliente_aux;

     LOOP

     FETCH cliente_aux INTO LSCLIENT,LCOUNTER,LNSEQUENCE;
     EXIT WHEN cliente_aux%NOTFOUND;

     interfaz_insudb.WBSPKGCLI.WBSPRCSELCLI009(LSCLIENT, tmp);

     BEGIN

        FETCH TMP INTO CLI_SCLIENT, CLI_SCLIENAME, SCLIENTOLD, CLI_NPERSON_TYP, CLI_DBIRTHDAT, CLI_SSEXCLIEN, CLI_NCIVILSTA, CLI_NNATIONALITY,
                  CLI_SFIRSTNAME, CLI_SLASTNAME, CLI_SLASTNAME2, CLI_NUSERCODE, CLI_DCOMPDATE, CLI_SBLOCKADE, CLI_SBLOCKADE_IQ, CLI_DINPDATE,
                  SRUC_AUX, NTYPDOC_DNI, SDNI_AUX, NTYPDOC_RUC, ADD_BILL_SDESCADD, ADD_BILL_NZIP_CODE, ADD_BILL_SZONE, ADD_HOME_SDESCADD,
                  ADD_HOME_NZIP_CODE, ADD_HOME_SZONE, ADD_SKEYADDRESS, USE_NUSERCODE, USE_SSCHE_CODE, USE_SACCESSWO, USE_SINITIALS, USE_NDEPARTME,
                  USE_NOFFICE, USE_STYPE, BILL_SPHONE1, BILL_SPHONE2, HOME_SPHONE1, HOME_SPHONE2, ADD_SE_MAIL, IQ_NIQCIVILSTA, CLI_SICLIENTNAM,
                  CLI_SOFFDESC, CLI_NOCCUPAT, CLI_SACCOUNT_IN, CLI_NCLASSHEALTH, CLI_DDEATHDATE, CLI_NHEIGHT, CLI_NHOUSE_TYPE, CLI_NQ_CARS,
                  CLI_NQ_CHILD, CLI_SSMOKING, CLI_NWEIGHT, CLI_NECONOMIC_L, CLI_NAREA, CLI_NPERTITLE, SCUI_AUX, NTYPDOC_CUI, CLI_NUSERBLOCKADE,
                  CLI_NCAUSEBLOCKADE, ADD_BILL_NCOUNTRY, ADD_BILL_SREFERENCE, ADD_HOME_NCOUNTRY, ADD_HOME_SREFERENCE, SOTHERDOCUMENT,
                  NTYPDOC_OTHERDOC, ADD_BILL_NCOUNTRY_IQ, ADD_HOME_NCOUNTRY_IQ, ADD_HOME_DCOMPDATE, ADD_BILL_DCOMPDATE, SSEGM_ACC, CLI_NRISKIND,CLI_DRISKDATE,
				  SCODERRORS;
        EXIT WHEN TMP%NOTFOUND;

        INSERT INTO WBSPRCSELCLI009
                    (CLI_SCLIENT,CLI_SCLIENAME,SCLIENTOLD,CLI_NPERSON_TYP,CLI_DBIRTHDAT,CLI_SSEXCLIEN,CLI_NCIVILSTA,CLI_NNATIONALITY,
                     CLI_SFIRSTNAME,CLI_SLASTNAME,CLI_SLASTNAME2,CLI_NUSERCODE,CLI_DCOMPDATE,CLI_SBLOCKADE,CLI_SBLOCKADE_IQ,CLI_DINPDATE,
                     SRUC_AUX,NTYPDOC_DNI,DNI_AUX,NTYPDOC_RUC,ADD_BILL_SDESCADD,ADD_BILL_NZIP_CODE,ADD_BILL_SZONE,ADD_HOME_SDESCADD,
                     ADD_HOME_NZIP_CODE,ADD_HOME_SZONE,ADD_SKEYADDRESS,USE_NUSERCODE,USE_SSCHE_CODE,USE_SACCESSWO,USE_SINITIALS,USE_NDEPARTME,
                     USE_NOFFICE,USE_STYPE,BILL_SPHONE1,BILL_SPHONE2,HOME_SPHONE1,HOME_SPHONE2,ADD_SE_MAIL,IQ_NIQCIVILSTA,CLI_SICLIENTNAM,
                     CLI_SOFFDESC,CLI_NOCCUPAT,CLI_SACCOUNT_IN,CLI_NCLASSHEALTH,CLI_DDEATHDATE,CLI_NHEIGHT,CLI_NHOUSE_TYPE,CLI_NQ_CARS,
                     CLI_NQ_CHILD,CLI_SSMOKING,CLI_NWEIGHT,CLI_NECONOMIC_L,CLI_NAREA,CLI_NPERTITLE,SCUI_AUX,NTYPDOC_CUI,CLI_NUSERBLOCKADE,
                     CLI_NCAUSEBLOCKADE,ADD_BILL_NCOUNTRY,ADD_BILL_SREFERENCE,ADD_HOME_NCOUNTRY,ADD_HOME_SREFERENCE,SOTHERDOCUMENT_AUX,
                     NTYPDOC_OTHERDOC,ADD_BILL_NCOUNTRY_IQ,ADD_HOME_NCOUNTRY_IQ,ADD_HOME_DCOMPDATE,ADD_BILL_DCOMPDATE,CLI_SSEGM_ACC,CLI_NRISKIND,CLI_DRISKDATE,
					 SCODERRORS,LSCLIENT,LNSEQUENCE,LCOUNTER)
             VALUES (CLI_SCLIENT, CLI_SCLIENAME, SCLIENTOLD, CLI_NPERSON_TYP, CLI_DBIRTHDAT, CLI_SSEXCLIEN, CLI_NCIVILSTA, CLI_NNATIONALITY,
                      CLI_SFIRSTNAME, CLI_SLASTNAME, CLI_SLASTNAME2, CLI_NUSERCODE, CLI_DCOMPDATE, CLI_SBLOCKADE, CLI_SBLOCKADE_IQ, CLI_DINPDATE,
                      SRUC_AUX, NTYPDOC_DNI, SDNI_AUX, NTYPDOC_RUC, ADD_BILL_SDESCADD, ADD_BILL_NZIP_CODE, ADD_BILL_SZONE, ADD_HOME_SDESCADD,
                      ADD_HOME_NZIP_CODE, ADD_HOME_SZONE, ADD_SKEYADDRESS, USE_NUSERCODE, USE_SSCHE_CODE, USE_SACCESSWO, USE_SINITIALS, USE_NDEPARTME,
                      USE_NOFFICE, USE_STYPE, BILL_SPHONE1, BILL_SPHONE2, HOME_SPHONE1, HOME_SPHONE2, ADD_SE_MAIL, IQ_NIQCIVILSTA, CLI_SICLIENTNAM,
                      CLI_SOFFDESC, CLI_NOCCUPAT, CLI_SACCOUNT_IN, CLI_NCLASSHEALTH, CLI_DDEATHDATE, CLI_NHEIGHT, CLI_NHOUSE_TYPE, CLI_NQ_CARS,
                      CLI_NQ_CHILD, CLI_SSMOKING, CLI_NWEIGHT, CLI_NECONOMIC_L, CLI_NAREA, CLI_NPERTITLE, SCUI_AUX, NTYPDOC_CUI, CLI_NUSERBLOCKADE,
                      CLI_NCAUSEBLOCKADE, ADD_BILL_NCOUNTRY, ADD_BILL_SREFERENCE, ADD_HOME_NCOUNTRY, ADD_HOME_SREFERENCE, SOTHERDOCUMENT,
                      NTYPDOC_OTHERDOC, ADD_BILL_NCOUNTRY_IQ, ADD_HOME_NCOUNTRY_IQ, ADD_HOME_DCOMPDATE, ADD_BILL_DCOMPDATE, SSEGM_ACC,CLI_NRISKIND,CLI_DRISKDATE,
					  SCODERRORS,LSCLIENT,LNSEQUENCE,LCOUNTER);

     EXCEPTION
         WHEN OTHERS
         THEN

         SCODERRORS:=SQLERRM;

         UPDATE WBSTBLINTFCLIEN_AUX
         SET STATUS = 3, ERR_MSG = 'WBSPRCSELCLI009'||SCODERRORS
         WHERE NSEQUENCE = LNSEQUENCE;

     END;

     END LOOP;

   END wbsprcselclidt00901;

   PROCEDURE wbsprcselclidt01201
   AS

   LSCLIENT WBSTBLINTFCLIEN_AUX.SCLIENT%TYPE;
   LCOUNTER WBSTBLINTFCLIEN_AUX.SCLIENT%TYPE;
   LNSEQUENCE WBSTBLINTFCLIEN_AUX.SCLIENT%TYPE;
   TMP              sys_refcursor;

   SCLIENTINX            CHAR(11);
    SCHARGE1              TABLE283.SDESCRIPT%TYPE;
    SCHARGE2              TABLE283.SDESCRIPT%TYPE;
    SCHARGE3              TABLE283.SDESCRIPT%TYPE;
    SPERSON1              CLIENT.SCLIENAME%TYPE;
    SPERSON2              CLIENT.SCLIENAME%TYPE;
    SPERSON3              CLIENT.SCLIENAME%TYPE;
    SLEGALDATACARD        CLIENT.SLEGALDATACARD%TYPE;
    SZONEREGISTRY         CLIENT.SZONEREGISTRY%TYPE;
    DCOMPDATE             CONTAC_CLI.DCOMPDATE%TYPE;
    NUSERCODE             CONTAC_CLI.NUSERCODE%TYPE;
    SCODERRORS             VARCHAR2(255);

    CURSOR cliente_aux IS
        SELECT SCLIENT, COUNTER, NSEQUENCE
        FROM WBSTBLINTFCLIEN_AUX;

   BEGIN
     OPEN cliente_aux;

     LOOP

     FETCH cliente_aux INTO LSCLIENT,LCOUNTER,LNSEQUENCE;
     EXIT WHEN cliente_aux%NOTFOUND;

     interfaz_insudb.WBSPKGCLI.WBSPRCSELCLI012(LSCLIENT, tmp);

     BEGIN

        FETCH TMP INTO SCLIENTINX, SCHARGE1, SCHARGE2, SCHARGE3, SPERSON1, SPERSON2, SPERSON3, SLEGALDATACARD, SZONEREGISTRY,
                  DCOMPDATE, NUSERCODE;
        EXIT WHEN TMP%NOTFOUND;

        INSERT INTO WBSPRCSELCLI012
                    (SCLIENTINX,SCHARGE1,SCHARGE2,SCHARGE3,SPERSON1,SPERSON2,SPERSON3,SLEGALDATACARD,SZONEREGISTRY,
                     DCOMPDATE,NUSERCODE,LSCLIENT,LCOUNTER,LNSEQUENCE)
             VALUES (SCLIENTINX,SCHARGE1,SCHARGE2,SCHARGE3,SPERSON1,SPERSON2,SPERSON3,SLEGALDATACARD,SZONEREGISTRY,
                     DCOMPDATE,NUSERCODE,LSCLIENT,LCOUNTER,LNSEQUENCE);

     EXCEPTION
         WHEN OTHERS
         THEN

         SCODERRORS:=SQLERRM;

         UPDATE WBSTBLINTFCLIEN_AUX
         SET STATUS = 3, ERR_MSG = 'WBSPRCSELCLI012'||SCODERRORS
         WHERE NSEQUENCE = LNSEQUENCE;

     END;

     END LOOP;

   end wbsprcselclidt01201;

   PROCEDURE WBSPRCSELCLIDT001(
      LSCLIENT IN WBSTBLINTFCLIEN_AUX.SCLIENT%TYPE,
      LCOUNTER IN WBSTBLINTFCLIEN_AUX.COUNTER%TYPE,
      NSEQUENCE IN WBSTBLINTFCLIEN_AUX.NSEQUENCE%TYPE
   ) AS

    TMP              sys_refcursor;

    ZZIDREG            CHAR(4);
    KUNNR              CHAR(10);
    KONZS              CHAR(10);
    KTOKD              CHAR(4);
    LAND1              CHAR(3);
    LAND2              CHAR(3);
    LIFNR              CHAR(10);
    NAME1              CHAR(35);
    NAME2              CHAR(35);
    NAME3              CHAR(35);
    NAME4              CHAR(35);
    ORT01              CHAR(35);
    ORT02              CHAR(35);
    PSTLZ              CHAR(10);
    REGIO              CHAR(3);
    SORTL              CHAR(10);
    SPERR              CHAR(1);
    SPRAS              CHAR(1);
    STCD1              CHAR(16);
    STRAS              CHAR(35);
    TELF1              CHAR(16);
    TELF2              CHAR(16);
    TELFX              CHAR(31);
    STKZN              CHAR(1);
    FITYP              CHAR(2);
    STCDT              CHAR(2);

    SCODERRORS             VARCHAR2(255);

   BEGIN

   interfaz_insudb.WBSPKGCLI.WBSPRCSELCLI001(LSCLIENT, tmp);

   LOOP

     FETCH TMP INTO ZZIDREG, KUNNR, KONZS, KTOKD, LAND1, LIFNR, NAME1, NAME2, NAME3, NAME4, ORT01, ORT02, PSTLZ,
               REGIO, SORTL, SPERR, SPRAS, STCD1, STRAS, TELF1, TELF2, TELFX, STKZN, FITYP, STCDT;
     EXIT WHEN TMP%NOTFOUND;

     INSERT INTO WBSPRCSELCLI001
                 (SCLIENT,NUMROW,ZZIDREG,KUNNR,KONZS,KTOKD,LAND1,LIFNR,NAME1,NAME2,NAME3,NAME4,ORT01,ORT02,PSTLZ,
                  REGIO,SORTL,SPERR,SPRAS,STCD1,STRAS,TELF1,TELF2,TELFX,STKZN,FITYP,STCDT,NSEQUENCE)
          VALUES (LSCLIENT,LCOUNTER,ZZIDREG,KUNNR,KONZS,KTOKD,LAND1,LIFNR,NAME1,NAME2,NAME3,NAME4,ORT01,ORT02,PSTLZ,
                  REGIO,SORTL,SPERR,SPRAS,STCD1,STRAS,TELF1,TELF2,TELFX,STKZN,FITYP,STCDT,NSEQUENCE);

   END LOOP;

   EXCEPTION
         WHEN OTHERS
         THEN

         SCODERRORS:=SQLERRM;

         UPDATE WBSTBLINTFCLIEN_AUX
         SET STATUS = 3, ERR_MSG = 'WBSPRCSELCLI001'||SCODERRORS
         WHERE NSEQUENCE = NSEQUENCE;

   END WBSPRCSELCLIDT001;

   PROCEDURE wbsprcselclidt002(
      LSCLIENT IN WBSTBLINTFCLIEN_AUX.SCLIENT%TYPE,
      LCOUNTER IN WBSTBLINTFCLIEN_AUX.COUNTER%TYPE,
      NSEQUENCE IN WBSTBLINTFCLIEN_AUX.NSEQUENCE%TYPE
   )AS

    TMP              sys_refcursor;

    ZZIDREG            CHAR(4);
    OBJ_TYPE           CHAR(10);
    OBJ_ID             CHAR(70);

    SCODERRORS             VARCHAR2(255);

   BEGIN

   interfaz_insudb.WBSPKGCLI.WBSPRCSELCLI002(LSCLIENT, tmp);

   LOOP

     FETCH TMP INTO ZZIDREG, OBJ_TYPE, OBJ_ID;
     EXIT WHEN TMP%NOTFOUND;

     INSERT INTO WBSPRCSELCLI002
                 (SCLIENT,NUMROW,ZZIDREG,OBJ_TYPE,OBJ_ID,NSEQUENCE)
          VALUES (LSCLIENT,LCOUNTER,ZZIDREG,OBJ_TYPE,OBJ_ID,NSEQUENCE);

   END LOOP;

   EXCEPTION
         WHEN OTHERS
         THEN

         SCODERRORS:=SQLERRM;

         UPDATE WBSTBLINTFCLIEN_AUX
         SET STATUS = 3, ERR_MSG = 'WBSPRCSELCLI002'||SCODERRORS
         WHERE NSEQUENCE = NSEQUENCE;

   END WBSPRCSELCLIDT002;

   PROCEDURE wbsprcselclidt003(
      LSCLIENT IN WBSTBLINTFCLIEN_AUX.SCLIENT%TYPE,
      LCOUNTER IN WBSTBLINTFCLIEN_AUX.COUNTER%TYPE,
      NSEQUENCE IN WBSTBLINTFCLIEN_AUX.NSEQUENCE%TYPE
   )AS

   TMP              sys_refcursor;

    ZZIDREG            CHAR(4);
    STR_SUPPL1         CHAR(35);
    STR_SUPPL2         CHAR(35);
    STR_SUPPL3         CHAR(35);
    LOCATION           CHAR(35);

    SCODERRORS             VARCHAR2(255);

   BEGIN

   interfaz_insudb.WBSPKGCLI.WBSPRCSELCLI003(LSCLIENT, tmp);

   LOOP

     FETCH TMP INTO ZZIDREG, STR_SUPPL1, STR_SUPPL2, STR_SUPPL3, LOCATION;
     EXIT WHEN TMP%NOTFOUND;

     INSERT INTO WBSPRCSELCLI003
                 (SCLIENT,NUMROW,ZZIDREG,STR_SUPPL1,STR_SUPPL2,STR_SUPPL3,LOCATION,NSEQUENCE)
          VALUES (LSCLIENT,LCOUNTER,ZZIDREG,STR_SUPPL1,STR_SUPPL2,STR_SUPPL3,LOCATION,NSEQUENCE);

   END LOOP;

   EXCEPTION
         WHEN OTHERS
         THEN

         SCODERRORS:=SQLERRM;

         UPDATE WBSTBLINTFCLIEN_AUX
         SET STATUS = 3, ERR_MSG = 'WBSPRCSELCLI003'||SCODERRORS
         WHERE NSEQUENCE = NSEQUENCE;

   END WBSPRCSELCLIDT003;

   PROCEDURE wbsprcselclidt004(
      LSCLIENT IN WBSTBLINTFCLIEN_AUX.SCLIENT%TYPE,
      LCOUNTER IN WBSTBLINTFCLIEN_AUX.COUNTER%TYPE,
      NSEQUENCE IN WBSTBLINTFCLIEN_AUX.NSEQUENCE%TYPE
   )AS

   TMP              sys_refcursor;

    ZZIDREG            CHAR(4);
    VKORG              CHAR(4);
    VTWEG              CHAR(2);
    SPART              CHAR(2);
    KALKS              CHAR(1);
    VSBED              CHAR(2);
    KTGRD              CHAR(2);
    ZTERM              CHAR(4);

    SCODERRORS             VARCHAR2(255);

   BEGIN

   interfaz_insudb.WBSPKGCLI.WBSPRCSELCLI004(LSCLIENT, tmp);

   LOOP

     FETCH TMP INTO ZZIDREG, VKORG, VTWEG, SPART, KALKS, VSBED, KTGRD, ZTERM;
     EXIT WHEN TMP%NOTFOUND;

     INSERT INTO WBSPRCSELCLI004
                 (SCLIENT,NUMROW,ZZIDREG,VKORG,VTWEG,SPART,KALKS,VSBED,KTGRD,ZTERM,NSEQUENCE)
          VALUES (LSCLIENT,LCOUNTER,ZZIDREG,VKORG,VTWEG,SPART,KALKS,VSBED,KTGRD,ZTERM,NSEQUENCE);

   END LOOP;

   EXCEPTION
         WHEN OTHERS
         THEN

         SCODERRORS:=SQLERRM;

         UPDATE WBSTBLINTFCLIEN_AUX
         SET STATUS = 3, ERR_MSG = 'WBSPRCSELCLI004'||SCODERRORS
         WHERE NSEQUENCE = NSEQUENCE;

   END WBSPRCSELCLIDT004;

   PROCEDURE wbsprcselclidt005(
      LSCLIENT IN WBSTBLINTFCLIEN_AUX.SCLIENT%TYPE,
      LCOUNTER IN WBSTBLINTFCLIEN_AUX.COUNTER%TYPE,
      NSEQUENCE IN WBSTBLINTFCLIEN_AUX.NSEQUENCE%TYPE
   )AS

   TMP              sys_refcursor;

    ZZIDREG            CHAR(4);
    ALAND              CHAR(3);
    TATYP              CHAR(4);
    TAXKD              CHAR(1);

    SCODERRORS             VARCHAR2(255);

   BEGIN

   interfaz_insudb.WBSPKGCLI.WBSPRCSELCLI005(LSCLIENT, tmp);

   LOOP

     FETCH TMP INTO ZZIDREG,ALAND,TATYP,TAXKD;
     EXIT WHEN TMP%NOTFOUND;

     INSERT INTO WBSPRCSELCLI005
                 (SCLIENT,NUMROW,ZZIDREG,ALAND,TATYP,TAXKD,NSEQUENCE)
          VALUES (LSCLIENT,LCOUNTER,ZZIDREG,ALAND,TATYP,TAXKD,NSEQUENCE);

   END LOOP;

   EXCEPTION
         WHEN OTHERS
         THEN

         SCODERRORS:=SQLERRM;

         UPDATE WBSTBLINTFCLIEN_AUX
         SET STATUS = 3, ERR_MSG = 'WBSPRCSELCLI005'||SCODERRORS
         WHERE NSEQUENCE = NSEQUENCE;

   END WBSPRCSELCLIDT005;

   PROCEDURE wbsprcselclidt006(
      LSCLIENT IN WBSTBLINTFCLIEN_AUX.SCLIENT%TYPE,
      LCOUNTER IN WBSTBLINTFCLIEN_AUX.COUNTER%TYPE,
      NSEQUENCE IN WBSTBLINTFCLIEN_AUX.NSEQUENCE%TYPE
   )AS

   TMP              sys_refcursor;

    ZZIDREG            CHAR(4);
    BUKRS              CHAR(6);
    SPERR              CHAR(1);
    AKONT              CHAR(10);
    XVERR              CHAR(1);
    ZTERM              CHAR(4);
    FDGRV              CHAR(10);
    PERNR              CHAR(8);

    SCODERRORS             VARCHAR2(255);

   BEGIN

   interfaz_insudb.WBSPKGCLI.WBSPRCSELCLI006(LSCLIENT, tmp);

   LOOP

     FETCH TMP INTO ZZIDREG,BUKRS,SPERR,AKONT,XVERR,ZTERM,FDGRV,PERNR;
     EXIT WHEN TMP%NOTFOUND;

     INSERT INTO WBSPRCSELCLI006
                 (SCLIENT,NUMROW,ZZIDREG,BUKRS,SPERR,AKONT,XVERR,ZTERM,FDGRV,PERNR,NSEQUENCE)
          VALUES (LSCLIENT,LCOUNTER,ZZIDREG,BUKRS,SPERR,AKONT,XVERR,ZTERM,FDGRV,PERNR,NSEQUENCE);

   END LOOP;

   EXCEPTION
         WHEN OTHERS
         THEN

         SCODERRORS:=SQLERRM;

         UPDATE WBSTBLINTFCLIEN_AUX
         SET STATUS = 3, ERR_MSG = 'WBSPRCSELCLI006'||SCODERRORS
         WHERE NSEQUENCE = NSEQUENCE;

   END WBSPRCSELCLIDT006;

   PROCEDURE wbsprcselclidt011(
      LSCLIENT IN WBSTBLINTFCLIEN_AUX.SCLIENT%TYPE,
      LCOUNTER IN WBSTBLINTFCLIEN_AUX.COUNTER%TYPE,
      NSEQUENCE IN WBSTBLINTFCLIEN_AUX.NSEQUENCE%TYPE
   )AS

   TMP              sys_refcursor;
   SCLIENTINX             CHAR(11);
   NINTERMED              CLIENTINTER.NINTERMED%TYPE;
   DSTARTRELATION         CLIENTINTER.DSTARTRELATION%TYPE;
   DENDRELATION           CLIENTINTER.DENDRELATION%TYPE;
   DCOMPDATE              CLIENTINTER.DCOMPDATE%TYPE;
   NUSERCODE              CLIENTINTER.NUSERCODE%TYPE;
   SINTERMEDR             CLIENTINTER.SINTERMEDR%TYPE;
   SCODERRORS             VARCHAR2(255);

   BEGIN

   interfaz_insudb.WBSPKGCLI.WBSPRCSELCLI011(LSCLIENT, tmp);

   LOOP

     FETCH TMP INTO SCLIENTINX,NINTERMED,DSTARTRELATION,DENDRELATION,DCOMPDATE,
                    NUSERCODE,SINTERMEDR;
     EXIT WHEN TMP%NOTFOUND;

     INSERT INTO WBSPRCSELCLI011
                 (SCLIENTINX,NINTERMED,DSTARTRELATION,DENDRELATION,DCOMPDATE,
                    NUSERCODE,SINTERMEDR,LSCLIENT,LCOUNTER,NSEQUENCE)
          VALUES (SCLIENTINX,NINTERMED,DSTARTRELATION,DENDRELATION,DCOMPDATE,
                    NUSERCODE,SINTERMEDR,LSCLIENT,LCOUNTER,NSEQUENCE);

   END LOOP;

   EXCEPTION
         WHEN OTHERS
         THEN

         SCODERRORS:=SQLERRM;

         UPDATE WBSTBLINTFCLIEN
         SET NSTATUS = 3, SMNSJE_ERROR = 'WBSPRCSELCLI011'||SCODERRORS
         WHERE NSEQUENCE = NSEQUENCE;

   end wbsprcselclidt011;

   PROCEDURE CLEAN_TMP_CLIENTE
   AS
   BEGIN
      execute immediate 'truncate table interfaz_insudb.WBSPRCSELCLI001';
      execute immediate 'truncate table interfaz_insudb.WBSPRCSELCLI002';
      execute immediate 'truncate table interfaz_insudb.WBSPRCSELCLI003';
      execute immediate 'truncate table interfaz_insudb.WBSPRCSELCLI004';
      execute immediate 'truncate table interfaz_insudb.WBSPRCSELCLI005';
      execute immediate 'truncate table interfaz_insudb.WBSPRCSELCLI006';
      execute immediate 'truncate table interfaz_insudb.WBSPRCSELCLI009';
      execute immediate 'truncate table interfaz_insudb.WBSPRCSELCLI012';
   END CLEAN_TMP_CLIENTE;

   PROCEDURE wbsprcselprodt001(
      NSEQUENCE     IN  WBSTBLRECEIPT.NSEQUENCE%TYPE,
      COUNTER       IN  INTEGER
   )
   AS
   NCOMPANY         OPT_SYSTEM.NCOMPANY%TYPE;
   NDOCTYPE         INTEGER;
   NRECEIPT         WBSTBLRECEIPT.NRECEIPT%TYPE;
   NRECTYPE         PREMIUM.NTYPE%TYPE;
   NORIGINCOUPON    PREMIUM.NORIGINCOUPON%TYPE;
   NTRANSAC         WBSTBLRECEIPT.NTRANSAC%TYPE;
   DSTATDATE        PREMIUM_MO.DSTATDATE%TYPE;
   SACTION          WBSTBLRECEIPT.SACTION%TYPE;
   SBRANCH_POLICY   VARCHAR2(20);
   SCODERRORS       VARCHAR2(255);
   TMP              sys_refcursor;

   BEGIN
      BEGIN
         interfaz_insudb.WBSPKGPRO.WBSPRCSELPRO001 (NSEQUENCE, tmp);

         LOOP
            FETCH tmp
             INTO NCOMPANY, NDOCTYPE, NRECEIPT, NRECTYPE,
                  NORIGINCOUPON, NTRANSAC, DSTATDATE, SACTION,SBRANCH_POLICY, SCODERRORS;
            EXIT WHEN tmp%NOTFOUND;

            INSERT INTO WBSPRCSELPRO001
                        (NSEQUENCE, NCOMPANY, NDOCTYPE, NRECEIPT, NRECTYPE,
                         NORIGINCOUPON, NTRANSAC, DSTATDATE, SACTION, SCODERRORS,SBRANCH_POLICY,
                         COUNTER
                        )
                 VALUES (NSEQUENCE, NCOMPANY, NDOCTYPE, NRECEIPT, NRECTYPE,
                         NORIGINCOUPON, NTRANSAC, DSTATDATE, SACTION, SBRANCH_POLICY,SCODERRORS,
                         COUNTER
                        );
         END LOOP;
      EXCEPTION
         WHEN OTHERS
         THEN
            INSERT INTO WBSPRCSELPRO001
                        (NSEQUENCE, NCOMPANY, NDOCTYPE, NRECEIPT, NRECTYPE,
                         NORIGINCOUPON, NTRANSAC, DSTATDATE, SACTION, SCODERRORS,SBRANCH_POLICY,
                         COUNTER
                        )
                 VALUES (NSEQUENCE, NCOMPANY, NDOCTYPE, NRECEIPT, NRECTYPE,
                         NORIGINCOUPON, NTRANSAC, DSTATDATE, SACTION, SBRANCH_POLICY, SCODERRORS,
                         COUNTER
                        );
      END;
   END wbsprcselprodt001;

   PROCEDURE wbsprcselprodt002 (
      NSEQUENCE          IN  WBSTBLRECEIPT.NSEQUENCE%TYPE,
      nreceipt           IN       premium.nreceipt%TYPE,
      ntransac           IN       premium_mo.ntransac%TYPE,
      counter            IN       INTEGER
   )
   AS
      NCOMPANY         OPT_SYSTEM.NCOMPANY%TYPE;
       NRECEIPT_AUX         PREMIUM.NRECEIPT%TYPE;
       NDOCTYPE         INTEGER;
       NRECTYPE         PREMIUM.NTYPE%TYPE;
       NORIGINCOUPON    PREMIUM.NORIGINCOUPON%TYPE;
       NBRANCH          PREMIUM.NBRANCH%TYPE;
       NPOLICY          PREMIUM.NPOLICY%TYPE;
       DEFFECDATE       PREMIUM.DEFFECDATE%TYPE;
       DEXPIRDAT        PREMIUM.DEXPIRDAT%TYPE;
       SCLIENT          VARCHAR2(10);
       SCERTIF          VARCHAR2(10);
       SIND_COINSURAN   CHAR(1);
       SIND_CONSORCIO   CHAR(1);
       SIND_FACULTATIVE CHAR(1);
       SNULLCODE        CHAR(3);
       NRECRELATEDCOLL  PREMIUM.NRECRELATEDCOLL%TYPE;
       NCOMMISSION      SMALLINT;
	   DSTARTDATE_POL	DATE;
	   DEXPIRDAT_POL    DATE;
	   SIND_ENDO_POL	CHAR(1);
       SCODERRORS       VARCHAR2(255);
       tmp   sys_refcursor;
       SCODERRORS1      VARCHAR2(255);

   BEGIN
      begin
          interfaz_insudb.wbspkgpro.wbsprcselpro002 (nreceipt, ntransac, tmp);
          loop
             FETCH tmp
              INTO ncompany, NRECEIPT_AUX, ndoctype, nrectype, norigincoupon,
                   nbranch, npolicy, deffecdate, dexpirdat, sclient, scertif,
                   sind_coinsuran, sind_consorcio, sind_facultative, snullcode,
                   nrecrelatedcoll, ncommission,DSTARTDATE_POL,DEXPIRDAT_POL,SIND_ENDO_POL, scoderrors;
             EXIT WHEN tmp%NOTFOUND;

             INSERT INTO WBSPRCSELPRO002
                            (NCOMPANY,NRECEIPT,NDOCTYPE,NRECTYPE,NORIGINCOUPON,
                            NBRANCH,NPOLICY,DEFFECDATE,DEXPIRDAT,SCLIENT,SCERTIF,
                            SIND_COINSURAN,SIND_CONSORCIO,SIND_FACULTATIVE,SNULLCODE,
                            NRECRELATEDCOLL,NCOMMISSION,DSTARTDATE_POL,DEXPIRDAT_POL,SIND_ENDO_POL,SCODERRORS,NSEQUENCE,NTRANSAC,
                            COUNTER
                            )
                     VALUES (NCOMPANY,NRECEIPT_AUX,NDOCTYPE,NRECTYPE,NORIGINCOUPON,
                            NBRANCH,NPOLICY,DEFFECDATE,DEXPIRDAT,SCLIENT,SCERTIF,
                            SIND_COINSURAN,SIND_CONSORCIO,SIND_FACULTATIVE,SNULLCODE,
                            NRECRELATEDCOLL,NCOMMISSION,DSTARTDATE_POL,DEXPIRDAT_POL,SIND_ENDO_POL,SCODERRORS,NSEQUENCE,NTRANSAC,
                            COUNTER
                            );
          END loop;
      EXCEPTION
         WHEN OTHERS
         THEN
             SCODERRORS1:=SQLERRM;

             INSERT INTO WBSPRCSELPRO002
                                (NCOMPANY,NRECEIPT,NDOCTYPE,NRECTYPE,NORIGINCOUPON,
                                NBRANCH,NPOLICY,DEFFECDATE,DEXPIRDAT,SCLIENT,SCERTIF,
                                SIND_COINSURAN,SIND_CONSORCIO,SIND_FACULTATIVE,SNULLCODE,
                                NRECRELATEDCOLL,NCOMMISSION,DSTARTDATE_POL,DEXPIRDAT_POL,SIND_ENDO_POL,SCODERRORS,NSEQUENCE,NTRANSAC,
                                COUNTER
                                )
                         VALUES (NCOMPANY,NRECEIPT_AUX,NDOCTYPE,NRECTYPE,NORIGINCOUPON,
                                NBRANCH,NPOLICY,DEFFECDATE,DEXPIRDAT,SCLIENT,SCERTIF,
                                SIND_COINSURAN,SIND_CONSORCIO,SIND_FACULTATIVE,SNULLCODE,
                                NRECRELATEDCOLL,NCOMMISSION,DSTARTDATE_POL,DEXPIRDAT_POL,SIND_ENDO_POL,SCODERRORS1,NSEQUENCE,NTRANSAC,
                                COUNTER
                                );

             /*update WBSTBLRECEIPT
             set NSTATUS = 3
             where NSEQUENCE = NSEQUENCE;*/
      END;

   END wbsprcselprodt002;


   PROCEDURE wbsprcselprodt003 (
      NSEQUENCE          IN  WBSTBLRECEIPT.NSEQUENCE%TYPE,
      nreceipt           IN       premium.nreceipt%TYPE,
      ntransac           IN       premium_mo.ntransac%TYPE,
      counter            IN       INTEGER
   )
   AS
       NCOMPANY         OPT_SYSTEM.NCOMPANY%TYPE;
       NDOCTYPE         INTEGER;
       NRECTYPE         PREMIUM.NTYPE%TYPE;
       NORIGINCOUPON    PREMIUM.NORIGINCOUPON%TYPE;
       DISSUEDAT        PREMIUM.DISSUEDAT%TYPE;
       DSTATDATE        PREMIUM.DSTATDATE%TYPE;
       NRECEIPT_AUX     PREMIUM.NRECEIPT%TYPE;
       NCURRENCY        PREMIUM.NCURRENCY%TYPE;
       SUSERCODE        CHAR(5);
       tmp   sys_refcursor;
       SCODERRORS1      varchar2(255);

   BEGIN
            begin
          interfaz_insudb.wbspkgpro.wbsprcselpro003 (nreceipt, ntransac, tmp);
          loop
             FETCH tmp
              INTO NCOMPANY,NDOCTYPE,NRECTYPE,NORIGINCOUPON,DISSUEDAT,DSTATDATE,
                   NRECEIPT_AUX,NCURRENCY,SUSERCODE;
             EXIT WHEN tmp%NOTFOUND;

             INSERT INTO WBSPRCSELPRO003
                            (NCOMPANY,NDOCTYPE,NRECTYPE,NORIGINCOUPON,DISSUEDAT,
                            DSTATDATE,NRECEIPT,NCURRENCY,SUSERCODE,NSEQUENCE,
                            NTRANSAC,COUNTER
                            )
                     VALUES (NCOMPANY,NDOCTYPE,NRECTYPE,NORIGINCOUPON,DISSUEDAT,
                            DSTATDATE,NRECEIPT_AUX,NCURRENCY,SUSERCODE,NSEQUENCE,
                            NTRANSAC,COUNTER
                            );
          END loop;
      EXCEPTION
         WHEN OTHERS
         THEN
             SCODERRORS1:=SQLERRM;

             INSERT INTO WBSPRCSELPRO003
                            (NCOMPANY,NDOCTYPE,NRECTYPE,NORIGINCOUPON,DISSUEDAT,
                            DSTATDATE,NRECEIPT,NCURRENCY,SUSERCODE,NSEQUENCE,
                            NTRANSAC,COUNTER,SCODERRORS
                            )
                     VALUES (NCOMPANY,NDOCTYPE,NRECTYPE,NORIGINCOUPON,DISSUEDAT,
                            DSTATDATE,NRECEIPT_AUX,NCURRENCY,SUSERCODE,NSEQUENCE,
                            NTRANSAC,COUNTER,SCODERRORS1
                            );
             /*update WBSPRCSELPRO002
             set SCODERRORS = 3
             where NSEQUENCE = NSEQUENCE;

             update WBSTBLRECEIPT
             set NSTATUS = 3
             where NSEQUENCE = NSEQUENCE;*/
             /*INSERT INTO WBSPRCSELPRO003
                                (NCOMPANY,NDOCTYPE,NRECTYPE,NORIGINCOUPON,DISSUEDAT,
                                DSTATDATE,NRECEIPT,NCURRENCY,SUSERCODE,NSEQUENCE,
                                NTRANSAC,COUNTER
                                )
                         VALUES (NCOMPANY,NDOCTYPE,NRECTYPE,NORIGINCOUPON,DISSUEDAT,
                                 DSTATDATE,NRECEIPT_AUX,NCURRENCY,SUSERCODE,NSEQUENCE,
                                 NTRANSAC,COUNTER
                                );*/
      END;
   END wbsprcselprodt003;


   PROCEDURE wbsprcselprodt004 (
      NSEQUENCE          IN  WBSTBLRECEIPT.NSEQUENCE%TYPE,
      nreceipt           IN       premium.nreceipt%TYPE,
      ntransac           IN       premium_mo.ntransac%TYPE,
      counter            IN       INTEGER
   )
   AS
      NITEM_NUM        NUMBER(3);
       SACC_CLASS       CHAR(1);
       NDOCTYPE         INTEGER;
       NRECTYPE         PREMIUM.NTYPE%TYPE;
       NORIGINCOUPON    PREMIUM.NORIGINCOUPON%TYPE;
       SIND_DEB_CRED    CHAR(1);
       NOFFICE          TABLE9.NOFFICE%TYPE;
       NORI_AMO         ACC_LINES.NORI_AMO%TYPE;
       NRECEIPT_AUX         PREMIUM.NRECEIPT%TYPE;
       SACCOUNT         ACC_LINES.SACCOUNT%TYPE;
       SCLI_DEBTOR      VARCHAR2(10);
       SCLI_PROVIDER    VARCHAR2(10);
       DEXPIRDAT        PREMIUM.DEXPIRDAT%TYPE;
       NCOUNTRY         NUMBER(3);
       NCOMPANY         OPT_SYSTEM.NCOMPANY%TYPE;
       NBRANCH_LED      ACC_LINES.NBRANCH_LED%TYPE;
       NGEOGRAPHICZONE  GEOGRAPHICZONE_1.NGEOGRAPHICZONE1%TYPE;
       SASSIG_IGV       CHAR(2);
       NSEGMENT         NUMBER(5);
       NINTERTYP        INTERMEDIA.NINTERTYP%TYPE;
       NBRANCH          ACC_LINES.NBRANCH%TYPE;
	   SBUSSIUNIT		CHAR(2);
       SCODERRORS       CHAR(255);
       tmp              sys_refcursor;
       SCODERRORS1      varchar2(255);

   BEGIN
      BEGIN
         interfaz_insudb.wbspkgpro.wbsprcselpro004 (nreceipt, ntransac, tmp);

        LOOP
            FETCH tmp
             INTO NITEM_NUM,SACC_CLASS,NDOCTYPE,NRECTYPE,NORIGINCOUPON,SIND_DEB_CRED,NOFFICE,NORI_AMO,
                  NRECEIPT_AUX,SACCOUNT,SCLI_DEBTOR,SCLI_PROVIDER,DEXPIRDAT,NCOUNTRY,NCOMPANY,
                  NBRANCH_LED,NGEOGRAPHICZONE,SASSIG_IGV,NSEGMENT,NINTERTYP,NBRANCH,SBUSSIUNIT,SCODERRORS;
            EXIT WHEN tmp%NOTFOUND;

            INSERT INTO wbsprcselpro004
                        (NITEM_NUM,SACC_CLASS,NDOCTYPE,NRECTYPE,NORIGINCOUPON,SIND_DEB_CRED,NOFFICE,NORI_AMO,
                         NRECEIPT,SACCOUNT,SCLI_DEBTOR,SCLI_PROVIDER,DEXPIRDAT,NCOUNTRY,NCOMPANY,
                         NBRANCH_LED,NGEOGRAPHICZONE,SASSIG_IGV,NSEGMENT,NINTERTYP,NBRANCH,SBUSSIUNIT,SCODERRORS,
                         NSEQUENCE,NTRANSAC,COUNTER
                        )
                 VALUES (NITEM_NUM,SACC_CLASS,NDOCTYPE,NRECTYPE,NORIGINCOUPON,SIND_DEB_CRED,NOFFICE,NORI_AMO,
                         NRECEIPT_AUX,SACCOUNT,SCLI_DEBTOR,SCLI_PROVIDER,DEXPIRDAT,NCOUNTRY,NCOMPANY,
                         NBRANCH_LED,NGEOGRAPHICZONE,SASSIG_IGV,NSEGMENT,NINTERTYP,NBRANCH,SBUSSIUNIT,SCODERRORS,
                         NSEQUENCE,NTRANSAC,COUNTER
                        );
         END LOOP;
      EXCEPTION
         WHEN OTHERS
         THEN
             SCODERRORS1:=SQLERRM;

             INSERT INTO wbsprcselpro004
                        (NITEM_NUM,SACC_CLASS,NDOCTYPE,NRECTYPE,NORIGINCOUPON,SIND_DEB_CRED,NOFFICE,NORI_AMO,
                         NRECEIPT,SACCOUNT,SCLI_DEBTOR,SCLI_PROVIDER,DEXPIRDAT,NCOUNTRY,NCOMPANY,
                         NBRANCH_LED,NGEOGRAPHICZONE,SASSIG_IGV,NSEGMENT,NINTERTYP,NBRANCH,SBUSSIUNIT,SCODERRORS,
                         NSEQUENCE,NTRANSAC,COUNTER
                        )
                 VALUES (NITEM_NUM,SACC_CLASS,NDOCTYPE,NRECTYPE,NORIGINCOUPON,SIND_DEB_CRED,NOFFICE,NORI_AMO,
                         NRECEIPT_AUX,SACCOUNT,SCLI_DEBTOR,SCLI_PROVIDER,DEXPIRDAT,NCOUNTRY,NCOMPANY,
                         NBRANCH_LED,NGEOGRAPHICZONE,SASSIG_IGV,NSEGMENT,NINTERTYP,NBRANCH,SBUSSIUNIT,SCODERRORS1,
                         NSEQUENCE,NTRANSAC,COUNTER
                        );
            
      END;
   END wbsprcselprodt004;

   PROCEDURE wbsprcselprodt005 (
      NSEQUENCE          IN  WBSTBLRECEIPT.NSEQUENCE%TYPE,
      nreceipt           IN       premium.nreceipt%TYPE,
      ntransac           IN       premium_mo.ntransac%TYPE,
      counter            IN       INTEGER
   )
   AS
      nro_rows        INTEGER;
      tmp             sys_refcursor;
      NCOMPANY         OPT_SYSTEM.NCOMPANY%TYPE;
       NRECEIPT_AUX         PREMIUM.NRECEIPT%TYPE;
       NDOCTYPE         INTEGER;
       NRECTYPE         PREMIUM.NTYPE%TYPE;
       NORIGINCOUPON    PREMIUM.NORIGINCOUPON%TYPE;
       SCOMPANY_COA     VARCHAR2(10);
       DDATE_COA        COINSURAN.DEFFECDATE%TYPE;
       NSHARE           COINSURAN.NSHARE%TYPE;
       NPRE_CED         PREMIUM.NPREMIUMN%TYPE;
       NCOMMCOA         DETAIL_PRE.NCOMMISION%TYPE;
       SINDCOAEXT       CHAR(1);
       NEXPCOA          PREMIUM.NTAXAMOU%TYPE;
       NTAXCOA          PREMIUM.NTAXAMOU%TYPE;
       SPAYROLL         VARCHAR2(20);
       SCODERRORS1      varchar(255);

   BEGIN
      BEGIN
         interfaz_insudb.wbspkgpro.wbsprcselpro005 (nreceipt, ntransac, tmp);

         /** create table WBSPRCSELPRO005 (ntransac number(10), counter number(10), NCOMPANY NUMBER(5), NRECEIPT NUMBER(10), NDOCTYPE INTEGER, NRECTYPE NUMBER(5),
                         NORIGINCOUPON NUMBER(10), SCOMPANY_COA VARCHAR2(10), DDATE_COA DATE, NSHARE NUMBER(4,2),
                         NPRE_CED NUMBER(18,6), NCOMMCOA NUMBER(18,6), SINDCOAEXT CHAR(1), NEXPCOA NUMBER(18,6),
                         NTAXCOA NUMBER(18,6), SPAYROLL VARCHAR2(20));*/

         LOOP
            FETCH tmp
             INTO NCOMPANY,NRECEIPT_AUX,NDOCTYPE,NRECTYPE,NORIGINCOUPON,
             SCOMPANY_COA,DDATE_COA,NSHARE,NPRE_CED,NCOMMCOA,SINDCOAEXT,
             NEXPCOA,NTAXCOA,SPAYROLL;
            EXIT WHEN tmp%NOTFOUND;


            INSERT INTO wbsprcselpro005
                        (NCOMPANY,NRECEIPT,NDOCTYPE,NRECTYPE,NORIGINCOUPON,
                         SCOMPANY_COA,DDATE_COA,NSHARE,NPRE_CED,NCOMMCOA,SINDCOAEXT,
                         NEXPCOA,NTAXCOA,SPAYROLL,NSEQUENCE,NTRANSAC,COUNTER
                        )
                 VALUES (NCOMPANY,NRECEIPT_AUX,NDOCTYPE,NRECTYPE,NORIGINCOUPON,
                         SCOMPANY_COA,DDATE_COA,NSHARE,NPRE_CED,NCOMMCOA,SINDCOAEXT,
                         NEXPCOA,NTAXCOA,SPAYROLL,NSEQUENCE,NTRANSAC,COUNTER
                        );

         END LOOP;
      EXCEPTION
         WHEN OTHERS
         THEN
             SCODERRORS1:=SQLERRM;
             INSERT INTO wbsprcselpro005
                        (NCOMPANY,NRECEIPT,NDOCTYPE,NRECTYPE,NORIGINCOUPON,
                         SCOMPANY_COA,DDATE_COA,NSHARE,NPRE_CED,NCOMMCOA,SINDCOAEXT,
                         NEXPCOA,NTAXCOA,SPAYROLL,NSEQUENCE,NTRANSAC,COUNTER,SCODERRORS
                        )
                 VALUES (NCOMPANY,NRECEIPT_AUX,NDOCTYPE,NRECTYPE,NORIGINCOUPON,
                         SCOMPANY_COA,DDATE_COA,NSHARE,NPRE_CED,NCOMMCOA,SINDCOAEXT,
                         NEXPCOA,NTAXCOA,SPAYROLL,NSEQUENCE,NTRANSAC,COUNTER,SCODERRORS1
                        );

             /*update WBSPRCSELPRO002
             set SCODERRORS = 3
             where NSEQUENCE = NSEQUENCE;

             update WBSTBLRECEIPT
             set NSTATUS = 3
             where NSEQUENCE = NSEQUENCE;*/
            /*INSERT INTO wbsprcselpro005
                        (NCOMPANY,NRECEIPT,NDOCTYPE,NRECTYPE,NORIGINCOUPON,
                         SCOMPANY_COA,DDATE_COA,NSHARE,NPRE_CED,NCOMMCOA,SINDCOAEXT,
                         NEXPCOA,NTAXCOA,SPAYROLL,NSEQUENCE,NTRANSAC,COUNTER
                        )
                 VALUES (NCOMPANY,NRECEIPT_AUX,NDOCTYPE,NRECTYPE,NORIGINCOUPON,
                         SCOMPANY_COA,DDATE_COA,NSHARE,NPRE_CED,NCOMMCOA,SINDCOAEXT,
                         NEXPCOA,NTAXCOA,SPAYROLL,NSEQUENCE,NTRANSAC,COUNTER
                        );*/
      END;
   END wbsprcselprodt005;

   PROCEDURE wbsprcselprodt006 (
      NSEQUENCE  IN  WBSTBLRECEIPT.NSEQUENCE%TYPE,
      nreceipt   IN   premium.nreceipt%TYPE,
      counter    IN   INTEGER
   )
   AS
      tmp                  sys_refcursor;
      NCOMPANY             OPT_SYSTEM.NCOMPANY%TYPE;
       NRECEIPT_AUX         PREMIUM.NRECEIPT%TYPE;
       NDOCTYPE             INTEGER;
       NRECTYPE             PREMIUM.NTYPE%TYPE;
       NORIGINCOUPON        PREMIUM.NORIGINCOUPON%TYPE;
       SPROV_INTERM         TAB_PROVIDER.SPROVIDERSAP%TYPE;
       NINTERTYP            INTERMEDIA.NINTERTYP%TYPE;
       NCOMMISION_AMOUNT    COMMISS_PR.NAMOUNT%TYPE;
       NCOMMISION_PERCENT   COMMISS_PR.NSHARE%TYPE;
       NPREMIUMN            PREMIUM.NPREMIUMN%TYPE;
       SIND_IGV             CHAR(1);
       SCODERRORS1           varchar(255);

   BEGIN
      BEGIN

         /**create table WBSPRCSELPRO006(counter number(10), NCOMPANY NUMBER(5), NRECEIPT NUMBER(10), NDOCTYPE INTEGER, NRECTYPE NUMBER(5), NORIGINCOUPON NUMBER(10),
                                  SPROV_INTERM CHAR(10), NINTERTYP NUMBER(5), NCOMMISION_AMOUNT NUMBER(18,6), NCOMMISION_PERCENT NUMBER(5,2),
                                  NPREMIUMN NUMBER(18,6), SIND_IGV CHAR(1));*/

         interfaz_insudb.wbspkgpro.wbsprcselpro006 (nreceipt, tmp);

         LOOP
            FETCH tmp
             INTO NCOMPANY,NRECEIPT_AUX,NDOCTYPE,NRECTYPE,NORIGINCOUPON,SPROV_INTERM,
                  NINTERTYP,NCOMMISION_AMOUNT,NCOMMISION_PERCENT,NPREMIUMN,SIND_IGV;
            EXIT WHEN tmp%NOTFOUND;

            INSERT INTO wbsprcselpro006
                        (NCOMPANY,NRECEIPT,NDOCTYPE,NRECTYPE,NORIGINCOUPON,SPROV_INTERM,
                         NINTERTYP,NCOMMISION_AMOUNT,NCOMMISION_PERCENT,NPREMIUMN,
                         SIND_IGV,NSEQUENCE,COUNTER
                        )
                 VALUES (NCOMPANY,NRECEIPT_AUX,NDOCTYPE,NRECTYPE,NORIGINCOUPON,SPROV_INTERM,
                         NINTERTYP,NCOMMISION_AMOUNT,NCOMMISION_PERCENT,NPREMIUMN,
                         SIND_IGV,NSEQUENCE,COUNTER
                        );
         END LOOP;
      EXCEPTION
         WHEN OTHERS
         THEN
             SCODERRORS1:=SQLERRM;

             INSERT INTO wbsprcselpro006
                        (NCOMPANY,NRECEIPT,NDOCTYPE,NRECTYPE,NORIGINCOUPON,SPROV_INTERM,
                         NINTERTYP,NCOMMISION_AMOUNT,NCOMMISION_PERCENT,NPREMIUMN,
                         SIND_IGV,NSEQUENCE,COUNTER,SCODERRORS
                        )
                 VALUES (NCOMPANY,NRECEIPT_AUX,NDOCTYPE,NRECTYPE,NORIGINCOUPON,SPROV_INTERM,
                         NINTERTYP,NCOMMISION_AMOUNT,NCOMMISION_PERCENT,NPREMIUMN,
                         SIND_IGV,NSEQUENCE,COUNTER,SCODERRORS1
                        );
             /*update WBSPRCSELPRO002
             set SCODERRORS = '3' || SCODERRORS1
             where NSEQUENCE = NSEQUENCE;

             update WBSTBLRECEIPT
             set NSTATUS = 3
             where NSEQUENCE = NSEQUENCE;*/
            /*INSERT INTO wbsprcselpro006
                        (NCOMPANY,NRECEIPT,NDOCTYPE,NRECTYPE,NORIGINCOUPON,SPROV_INTERM,
                         NINTERTYP,NCOMMISION_AMOUNT,NCOMMISION_PERCENT,NPREMIUMN,
                         SIND_IGV,NSEQUENCE,COUNTER
                        )
                 VALUES (NCOMPANY,NRECEIPT_AUX,NDOCTYPE,NRECTYPE,NORIGINCOUPON,SPROV_INTERM,
                         NINTERTYP,NCOMMISION_AMOUNT,NCOMMISION_PERCENT,NPREMIUMN,
                         SIND_IGV,NSEQUENCE,COUNTER
                        );*/
      END;
   END wbsprcselprodt006;

    PROCEDURE wbsprcselprodt007(
      nsequence          IN    WBSTBLRECEIPT.NSEQUENCE%TYPE,
      nreceipt   IN   premium.nreceipt%TYPE,
      counter    IN   INTEGER
   )
   AS
      NCOMPANY         OPT_SYSTEM.NCOMPANY%TYPE;
       SACTION          VARCHAR2(3);
       NSISTORIGIN      INTEGER;
       NOFFICE          PREMIUM.NOFFICE%TYPE;
       NBRANCH          PREMIUM.NBRANCH%TYPE;
       NPRODUCT         PREMIUM.NPRODUCT%TYPE;
       NRECEIPT_AUX         PREMIUM.NRECEIPT%TYPE;
       DCOMPDATE        PREMIUM.DCOMPDATE%TYPE;
       DEFFECDATE       PREMIUM.DEFFECDATE%TYPE;
       DEXPIRDAT        PREMIUM.DEXPIRDAT%TYPE;
       DPAYDATE         PREMIUM.DPAYDATE%TYPE;
       SCLIENT          PREMIUM.SCLIENT%TYPE;
       SCLIENTOLD       CHAR(11);
       DISSUEDAT        PREMIUM.DISSUEDAT%TYPE;
       NINTERMED        COMMISS_PR.NINTERMED%TYPE;
       SICLIENT         CLIENT.SCLIENT%TYPE;
       SICLIENTOLD      CHAR(11);
       NPOLICY          PREMIUM.NPOLICY%TYPE;
       SCOLINVOT        POLICY.SCOLINVOT%TYPE;
       NTRATYPEI        PREMIUM.NTRATYPEI%TYPE;
       SPOLITYPE        POLICY.SPOLITYPE%TYPE;
       NRISK            INTEGER;
       NSTATUS_PRE      PREMIUM.NSTATUS_PRE%TYPE;
       SSTATUSVA        PREMIUM.SSTATUSVA%TYPE;
       NCONTRAT         PREMIUM.NCONTRAT%TYPE;
       NCURRENCY        PREMIUM.NCURRENCY%TYPE;
       SCURRENCYIQ      CHAR(2);
       NCERTIF          PREMIUM_CE.NCERTIF%TYPE;
       NDESTINYCOUPON   PREMIUM.NDESTINYCOUPON%TYPE;
       NEXCHANGE        PREMIUM.NEXCHANGE%TYPE;
       SDIRDEBIR        PREMIUM.SDIRDEBIT%TYPE;
       NBANKEXT         NUMBER(10);
       NTYPE_ACC        NUMBER(5);
       SACCOUNT         CHAR(25);
       NORIGINCOUPON    PREMIUM.NORIGINCOUPON%TYPE;
       NCOUPON          PREMIUM.NCOUPON%TYPE;
       SISFACULTATIVE   VARCHAR2(1);
       SCLIENT_ENDO     BENEFICIAR.SCLIENT%TYPE;
       SCLIENTENDO_OLD  CHAR(11);
       SECLIENAME       CLIENT.SCLIENAME%TYPE;
       SEARNED_COMMIS   VARCHAR2(30);
       SGAINED_COMMIS   VARCHAR2(30);
       SEXPENSES        VARCHAR2(30);
       SINCOME          VARCHAR2(30);
       STAX             VARCHAR2(30);
       NPREMIUMN        PREMIUM.NPREMIUMN%TYPE;
       NEMRIGHT         DETAIL_PRE.NPREMIUM%TYPE;
       NFINANEXP        DETAIL_PRE.NPREMIUM%TYPE;
       NCOMMISSION      INTEGER;
       NAMOUNT          COMMISS_PR.NAMOUNT%TYPE;
       NSHARE           COMMISS_PR.NSHARE%TYPE;
       NIGV             DETAIL_PRE.NPREMIUM%TYPE;
       NPREMIUM         DETAIL_PRE.NPREMIUM%TYPE;
       SBUSSITYP        POLICY.SBUSSITYP%TYPE;
       NAMOUNT_COUPON   PREMIUM.NPREMIUM%TYPE;
       NRECRELATEDCOLL  PREMIUM.NRECRELATEDCOLL%TYPE;
       SMANAUTI         PREMIUM.SMANAUTI%TYPE;
       NSUPERVIS        INTERM_SUPERV.NSUPERVIS%TYPE;
       SSUPCLIENT       CHAR(14);
       NTOT_COUPON      PREMIUM.NPREMIUM%TYPE;
       NPOLICY_MULTI    NUMBER(10);
       NCHANEL          NUMBER(5);
       NPROC_CLI        NUMBER(5);
       NPROC_BROK       NUMBER(5);
       NPROC_EJEC       NUMBER(5);
       DDATE_CTRL1      DATE;
       DDATE_CTRL2      DATE;
       NCOD_RECHAZO     NUMBER(5);
       SGESTION_DIRECTA CHAR(1);
       NBRANCH_MULTI    NUMBER(5);
       SNULLCODE        CHAR(3);
       NNULLCODE        NUMBER(5);
       DNULLDATE        DATE;
       NREHAB           INTEGER;
       NTYPE_DOC        NUMBER(5);
       STYPE_DOC_IQ     IQ_EQ_TYPDOC.STYPE_DOC_IQ%TYPE;
       NFLAG_COUPON     INTEGER;
       DCONVDATE        DATE;
       NCONV            NUMBER(10);
       NTYPE_BIL        NUMBER(5);
       SSERIAL          CHAR(3);
       SRECEIPT_BI      CHAR(10);
       DBILLDATE        DATE;
       NUSERCODE        PREMIUM.NUSERCODE%TYPE;
       SCHAIN           VARCHAR2(100);
       DFECVENCI        DATE;
       NRECEIPT_ORIGIN  NUMBER(10);
       DCARDEXPIR_VAR   DIR_DEBIT_DOC.DCARDEXPIR%TYPE;
       NSEGMENT_VAR     INTERM_SUPERV.NSEGMENT%TYPE;
       NSTAT_CONTR_VAR  COUPON_BOOK.NSTAT_CONTR%TYPE;
       NCOLLEXTRA       DETAIL_PRE.NPREMIUM%TYPE;
       NPRENETCOA       PREMIUM.NPREMIUMN%TYPE;
       NPRENETCED       PREMIUM.NPREMIUMN%TYPE;
       NIND_CONSORCIO   CHAR(1);
       SCODERRORS       VARCHAR2(255);
       TMP              sys_refcursor;

   BEGIN
      BEGIN

         DBMS_OUTPUT.PUT_LINE('INICIO DE SP');

         /**create table WBSPRCSELPRO006(counter number(10), NCOMPANY NUMBER(5), NRECEIPT NUMBER(10), NDOCTYPE INTEGER, NRECTYPE NUMBER(5), NORIGINCOUPON NUMBER(10),
                                  SPROV_INTERM CHAR(10), NINTERTYP NUMBER(5), NCOMMISION_AMOUNT NUMBER(18,6), NCOMMISION_PERCENT NUMBER(5,2),
                                  NPREMIUMN NUMBER(18,6), SIND_IGV CHAR(1));*/

         interfaz_insudb.wbspkgpro.wbsprcselpro007 (nreceipt, tmp);

         DBMS_OUTPUT.PUT_LINE('POST EJECUCION');

         LOOP
            FETCH tmp
             INTO NCOMPANY,SACTION,NSISTORIGIN,NOFFICE,NBRANCH,NPRODUCT,NRECEIPT_AUX,DCOMPDATE,DEFFECDATE,DEXPIRDAT,
                  DPAYDATE,SCLIENT,SCLIENTOLD,DISSUEDAT,NINTERMED,SICLIENT,SICLIENTOLD,NPOLICY,SCOLINVOT,
                  NTRATYPEI,SPOLITYPE,NRISK,NSTATUS_PRE,SSTATUSVA,NCONTRAT,NCURRENCY,SCURRENCYIQ,NCERTIF,
                  NDESTINYCOUPON,NEXCHANGE,SDIRDEBIR,NBANKEXT,NTYPE_ACC,SACCOUNT,NORIGINCOUPON,NCOUPON,
                  SISFACULTATIVE,SECLIENAME,SCLIENTENDO_OLD,SCLIENT_ENDO,SEARNED_COMMIS,SGAINED_COMMIS,SEXPENSES,
                  SINCOME,STAX,NPREMIUMN,NEMRIGHT,NFINANEXP,NCOMMISSION,NAMOUNT,NSHARE,NIGV,NPREMIUM,
                  SBUSSITYP,NAMOUNT_COUPON,NRECRELATEDCOLL,SMANAUTI,NSUPERVIS,SSUPCLIENT,NTOT_COUPON,
                  NPOLICY_MULTI,NCHANEL,NPROC_CLI,NPROC_BROK,NPROC_EJEC,DDATE_CTRL1,DDATE_CTRL2,NCOD_RECHAZO,
                  SGESTION_DIRECTA,NBRANCH_MULTI,SNULLCODE,NNULLCODE,DNULLDATE,NREHAB,NTYPE_DOC,STYPE_DOC_IQ,
                  NFLAG_COUPON,DCONVDATE,NCONV,NTYPE_BIL,SSERIAL,SRECEIPT_BI,DBILLDATE,NUSERCODE,SCHAIN,
                  DFECVENCI,NRECEIPT_ORIGIN,DCARDEXPIR_VAR,NSEGMENT_VAR,NSTAT_CONTR_VAR,NCOLLEXTRA,NPRENETCOA,
                  NPRENETCED,NIND_CONSORCIO,SCODERRORS;
            EXIT WHEN tmp%NOTFOUND;

            DBMS_OUTPUT.PUT_LINE('NSTATUS_PRE'||NSTATUS_PRE);

            INSERT INTO wbsprcselpro007
                        (NCOMPANY,SACTION,NSISTORIGIN,NOFFICE,NBRANCH,NPRODUCT,NRECEIPT,DCOMPDATE,DEFFECDATE,DEXPIRDAT,
                         DPAYDATE,SCLIENT,SCLIENTOLD,DISSUEDAT,NINTERMED,SICLIENT,SICLIENTOLD,NPOLICY,SCOLINVOT,
                         NTRATYPEI,SPOLITYPE,NRISK,NSTATUS_PRE,SSTATUSVA,NCONTRAT,NCURRENCY,SCURRENCYIQ,NCERTIF,
                         NDESTINYCOUPON,NEXCHANGE,SDIRDEBIR,NBANKEXT,NTYPE_ACC,SACCOUNT,NORIGINCOUPON,NCOUPON,
                         SISFACULTATIVE,SCLIENT_ENDO,SCLIENTENDO_OLD,SECLIENAME,SEARNED_COMMIS,SGAINED_COMMIS,
                         SEXPENSES,SINCOME,STAX,NPREMIUMN,NEMRIGHT,NFINANEXP,NCOMMISSION,NAMOUNT,NSHARE,NIGV,NPREMIUM,
                         SBUSSITYP,NAMOUNT_COUPON,NRECRELATEDCOLL,SMANAUTI,NSUPERVIS,SSUPCLIENT,NTOT_COUPON,
                         NPOLICY_MULTI,NCHANEL,NPROC_CLI,NPROC_BROK,NPROC_EJEC,DDATE_CTRL1,DDATE_CTRL2,NCOD_RECHAZO,
                         SGESTION_DIRECTA,NBRANCH_MULTI,SNULLCODE,NNULLCODE,DNULLDATE,NREHAB,NTYPE_DOC,STYPE_DOC_IQ,
                         NFLAG_COUPON,DCONVDATE,NCONV,NTYPE_BIL,SSERIAL,SRECEIPT_BI,DBILLDATE,NUSERCODE,SCHAIN,
                         DFECVENCI,NRECEIPT_ORIGIN,DCARDEXPIR_VAR,NSEGMENT_VAR,NSTAT_CONTR_VAR,NCOLLEXTRA,NPRENETCOA,
                         NPRENETCED,NIND_CONSORCIO,SCODERRORS,nsequence,COUNTER
                        )
                 VALUES (NCOMPANY,SACTION,NSISTORIGIN,NOFFICE,NBRANCH,NPRODUCT,NRECEIPT_AUX,DCOMPDATE,DEFFECDATE,DEXPIRDAT,
                         DPAYDATE,SCLIENT,SCLIENTOLD,DISSUEDAT,NINTERMED,SICLIENT,SICLIENTOLD,NPOLICY,SCOLINVOT,
                         NTRATYPEI,SPOLITYPE,NRISK,NSTATUS_PRE,SSTATUSVA,NCONTRAT,NCURRENCY,SCURRENCYIQ,NCERTIF,
                         NDESTINYCOUPON,NEXCHANGE,SDIRDEBIR,NBANKEXT,NTYPE_ACC,SACCOUNT,NORIGINCOUPON,NCOUPON,
                         SISFACULTATIVE,SCLIENT_ENDO,SCLIENTENDO_OLD,SECLIENAME,SEARNED_COMMIS,SGAINED_COMMIS,
                         SEXPENSES,SINCOME,STAX,NPREMIUMN,NEMRIGHT,NFINANEXP,NCOMMISSION,NAMOUNT,NSHARE,NIGV,NPREMIUM,
                         SBUSSITYP,NAMOUNT_COUPON,NRECRELATEDCOLL,SMANAUTI,NSUPERVIS,SSUPCLIENT,NTOT_COUPON,
                         NPOLICY_MULTI,NCHANEL,NPROC_CLI,NPROC_BROK,NPROC_EJEC,DDATE_CTRL1,DDATE_CTRL2,NCOD_RECHAZO,
                         SGESTION_DIRECTA,NBRANCH_MULTI,SNULLCODE,NNULLCODE,DNULLDATE,NREHAB,NTYPE_DOC,STYPE_DOC_IQ,
                         NFLAG_COUPON,DCONVDATE,NCONV,NTYPE_BIL,SSERIAL,SRECEIPT_BI,DBILLDATE,NUSERCODE,SCHAIN,
                         DFECVENCI,NRECEIPT_ORIGIN,DCARDEXPIR_VAR,NSEGMENT_VAR,NSTAT_CONTR_VAR,NCOLLEXTRA,NPRENETCOA,
                         NPRENETCED,NIND_CONSORCIO,SCODERRORS,nsequence,COUNTER
                        );
         END LOOP;
      EXCEPTION
         WHEN OTHERS
         THEN
            DBMS_OUTPUT.PUT_LINE('ERROR'||SQLERRM);
            INSERT INTO wbsprcselpro007
                        (NCOMPANY,SACTION,NSISTORIGIN,NOFFICE,NBRANCH,NPRODUCT,NRECEIPT,DCOMPDATE,DEFFECDATE,DEXPIRDAT,
                         DPAYDATE,SCLIENT,SCLIENTOLD,DISSUEDAT,NINTERMED,SICLIENT,SICLIENTOLD,NPOLICY,SCOLINVOT,
                         NTRATYPEI,SPOLITYPE,NRISK,NSTATUS_PRE,SSTATUSVA,NCONTRAT,NCURRENCY,SCURRENCYIQ,NCERTIF,
                         NDESTINYCOUPON,NEXCHANGE,SDIRDEBIR,NBANKEXT,NTYPE_ACC,SACCOUNT,NORIGINCOUPON,NCOUPON,
                         SISFACULTATIVE,SCLIENT_ENDO,SCLIENTENDO_OLD,SECLIENAME,SEARNED_COMMIS,SGAINED_COMMIS,
                         SEXPENSES,SINCOME,STAX,NPREMIUMN,NEMRIGHT,NFINANEXP,NCOMMISSION,NAMOUNT,NSHARE,NIGV,NPREMIUM,
                         SBUSSITYP,NAMOUNT_COUPON,NRECRELATEDCOLL,SMANAUTI,NSUPERVIS,SSUPCLIENT,NTOT_COUPON,
                         NPOLICY_MULTI,NCHANEL,NPROC_CLI,NPROC_BROK,NPROC_EJEC,DDATE_CTRL1,DDATE_CTRL2,NCOD_RECHAZO,
                         SGESTION_DIRECTA,NBRANCH_MULTI,SNULLCODE,NNULLCODE,DNULLDATE,NREHAB,NTYPE_DOC,STYPE_DOC_IQ,
                         NFLAG_COUPON,DCONVDATE,NCONV,NTYPE_BIL,SSERIAL,SRECEIPT_BI,DBILLDATE,NUSERCODE,SCHAIN,
                         DFECVENCI,NRECEIPT_ORIGIN,DCARDEXPIR_VAR,NSEGMENT_VAR,NSTAT_CONTR_VAR,NCOLLEXTRA,NPRENETCOA,
                         NPRENETCED,NIND_CONSORCIO,SCODERRORS,NSEQUENCE,COUNTER
                        )
                 VALUES (NCOMPANY,SACTION,NSISTORIGIN,NOFFICE,NBRANCH,NPRODUCT,NRECEIPT_AUX,DCOMPDATE,DEFFECDATE,DEXPIRDAT,
                         DPAYDATE,SCLIENT,SCLIENTOLD,DISSUEDAT,NINTERMED,SICLIENT,SICLIENTOLD,NPOLICY,SCOLINVOT,
                         NTRATYPEI,SPOLITYPE,NRISK,NSTATUS_PRE,SSTATUSVA,NCONTRAT,NCURRENCY,SCURRENCYIQ,NCERTIF,
                         NDESTINYCOUPON,NEXCHANGE,SDIRDEBIR,NBANKEXT,NTYPE_ACC,SACCOUNT,NORIGINCOUPON,NCOUPON,
                         SISFACULTATIVE,SCLIENT_ENDO,SCLIENTENDO_OLD,SECLIENAME,SEARNED_COMMIS,SGAINED_COMMIS,
                         SEXPENSES,SINCOME,STAX,NPREMIUMN,NEMRIGHT,NFINANEXP,NCOMMISSION,NAMOUNT,NSHARE,NIGV,NPREMIUM,
                         SBUSSITYP,NAMOUNT_COUPON,NRECRELATEDCOLL,SMANAUTI,NSUPERVIS,SSUPCLIENT,NTOT_COUPON,
                         NPOLICY_MULTI,NCHANEL,NPROC_CLI,NPROC_BROK,NPROC_EJEC,DDATE_CTRL1,DDATE_CTRL2,NCOD_RECHAZO,
                         SGESTION_DIRECTA,NBRANCH_MULTI,SNULLCODE,NNULLCODE,DNULLDATE,NREHAB,NTYPE_DOC,STYPE_DOC_IQ,
                         NFLAG_COUPON,DCONVDATE,NCONV,NTYPE_BIL,SSERIAL,SRECEIPT_BI,DBILLDATE,NUSERCODE,SCHAIN,
                         DFECVENCI,NRECEIPT_ORIGIN,DCARDEXPIR_VAR,NSEGMENT_VAR,NSTAT_CONTR_VAR,NCOLLEXTRA,NPRENETCOA,
                         NPRENETCED,NIND_CONSORCIO,SCODERRORS,NSEQUENCE,COUNTER
                        );
      END;
   END wbsprcselprodt007;
   
PROCEDURE wbsprcselprodt008 (
      NSEQUENCE  IN  WBSTBLRECEIPT.NSEQUENCE%TYPE,
      counter    IN   INTEGER
   )
   AS
      tmp                  sys_refcursor;
      NCOMPANY            OPT_SYSTEM.NCOMPANY%TYPE; 
      NRECEIPT            PREMIUM.NRECEIPT%TYPE;
      SFLAG_COINSURAN     CHAR(1);
      NNULLCODE           PREMIUM.NNULLCODE%TYPE;
      DSTATDATE           PREMIUM_MO.DSTATDATE%TYPE;
      SCODERRORS1         VARCHAR(255);
       
   BEGIN
      BEGIN
      
         /**create table WBSPRCSELPRO008(NSEQUENCE NUMBER (10), NCOMPANY NUMBER(5), NRECEIPT NUMBER(10), SFLAG_COINSURAN CHAR(1), 
         NNULLCODE NUMBER(5), DSTATDATE DATE, counter number(10), SCODERRORS VARCHAR(255));*/
                                          
         interfaz_insudb.wbspkgpro.wbsprcselpro008 (NSEQUENCE, tmp);

         LOOP
            FETCH tmp
             INTO NCOMPANY, NRECEIPT, SFLAG_COINSURAN, NNULLCODE, DSTATDATE;
            EXIT WHEN tmp%NOTFOUND;

            INSERT INTO wbsprcselpro008
                        (NSEQUENCE, NCOMPANY, NRECEIPT, SFLAG_COINSURAN, NNULLCODE, DSTATDATE, COUNTER
                        )
                 VALUES (NSEQUENCE, NCOMPANY, NRECEIPT, SFLAG_COINSURAN, NNULLCODE, DSTATDATE, COUNTER
                        );
         END LOOP;
      EXCEPTION
         WHEN OTHERS
         THEN
             SCODERRORS1:=SQLERRM;
             
             INSERT INTO wbsprcselpro008
                        (NSEQUENCE, NCOMPANY, NRECEIPT, SFLAG_COINSURAN, NNULLCODE, DSTATDATE, COUNTER, SCODERRORS
                        )
                 VALUES (NSEQUENCE, NCOMPANY, NRECEIPT, SFLAG_COINSURAN, NNULLCODE, DSTATDATE, COUNTER, SCODERRORS1
                        );
      END;
   END wbsprcselprodt008;

   PROCEDURE premium_commision_sp (
      comp_code           IN   premium_commision.comp_code%TYPE,
      premium             IN   premium_commision.premium%TYPE,
      sp_gl_ind           IN   premium_commision.sp_gl_ind%TYPE,
      vendor_no           IN   premium_commision.vendor_no%TYPE,
      vendor_role         IN   premium_commision.vendor_role%TYPE,
      commision_amount    IN   premium_commision.commision_amount%TYPE,
      commision_percent   IN   premium_commision.commision_percent%TYPE,
      base_net_amount     IN   premium_commision.base_net_amount%TYPE,
      tax_indicator       IN   premium_commision.tax_indicator%TYPE,
      counter             IN   premium_commision.counter%TYPE
   )
   AS
      nro_commision   INTEGER;
   /* create table premium_commision(comp_code number(4), premium number(10), sp_gl_ind char(1), vendor_no char(10),
                   vendor_role number(2), commision_amount decimal(13,2), commision_percent decimal(13,2), base_net_amount decimal(13,2),
                   tax_indicator char(1), counter integer, nro_commision integer); */
   BEGIN
      SELECT COUNT (*)
        INTO nro_commision
        FROM premium_commision
       WHERE counter = premium_commision_sp.counter;

      nro_commision := nro_commision + 1;

      INSERT INTO premium_commision
                  (comp_code, premium, sp_gl_ind, vendor_no, vendor_role,
                   commision_amount, commision_percent, base_net_amount,
                   tax_indicator, counter, nro_commision
                  )
           VALUES (comp_code, premium, sp_gl_ind, vendor_no, vendor_role,
                   commision_amount, commision_percent, base_net_amount,
                   tax_indicator, counter, nro_commision
                  );
   END premium_commision_sp;
   PROCEDURE premium_coinsuran_sp (
      comp_code                    IN   premium_coinsuran.comp_code%TYPE,
      premium                      IN   premium_coinsuran.premium%TYPE,
      sp_gl_ind                    IN   premium_coinsuran.sp_gl_ind%TYPE,
      coinsurer                    IN   premium_coinsuran.coinsurer%TYPE,
      coinsuran_date               IN   premium_coinsuran.coinsuran_date%TYPE,
      coinsuran_percent            IN   premium_coinsuran.coinsuran_percent%TYPE,
      premium_transferred_amount   IN   premium_coinsuran.premium_transferred_amount%TYPE,
      coinsuran_commision          IN   premium_coinsuran.coinsuran_commision%TYPE,
      extemporaneous               IN   premium_coinsuran.extemporaneous%TYPE,
      coinsuran_expense            IN   premium_coinsuran.coinsuran_expense%TYPE,
      coinsuran_expense_igv        IN   premium_coinsuran.coinsuran_expense_igv%TYPE,
      planilla_prima               IN   premium_coinsuran.planilla_prima%TYPE,
      counter                      IN   premium_coinsuran.counter%TYPE
   )
   AS
      nro_coinsuran   INTEGER;
      nro_commision   INTEGER;
   /* create table premium_coinsuran(comp_code char(4), premium char(10), sp_gl_ind char(1), coinsurer char(10), coinsuran_date char(8),
                coinsuran_percent decimal(13,2), premium_transferred_amount decimal(13,2), coinsuran_commision decimal(13,2),
                extemporaneous char(1), coinsuran_expense decimal(13,2), coinsuran_expense_igv decimal(13,2), planilla_prima varchar2(20),
                counter integer, nro_coinsuran integer); */
   BEGIN
      SELECT COUNT (*)
        INTO nro_commision
        FROM premium_commision
       WHERE counter = premium_coinsuran_sp.counter;

      SELECT COUNT (*)
        INTO nro_coinsuran
        FROM premium_coinsuran
       WHERE counter = premium_coinsuran_sp.counter;

      nro_coinsuran := nro_commision + nro_coinsuran + 1;

      INSERT INTO premium_coinsuran
                  (comp_code, premium, sp_gl_ind, coinsurer, coinsuran_date,
                   coinsuran_percent, premium_transferred_amount,
                   coinsuran_commision, extemporaneous, coinsuran_expense,
                   coinsuran_expense_igv, planilla_prima, counter,
                   nro_coinsuran
                  )
           VALUES (comp_code, premium, sp_gl_ind, coinsurer, coinsuran_date,
                   coinsuran_percent, premium_transferred_amount,
                   coinsuran_commision, extemporaneous, coinsuran_expense,
                   coinsuran_expense_igv, planilla_prima, counter,
                   nro_coinsuran
                  );
   END premium_coinsuran_sp;

   PROCEDURE CLEAN_TMP_AR001
   AS
   BEGIN
      execute immediate 'truncate table interfaz_insudb.WBSPRCSELPRO001';
      execute immediate 'truncate table interfaz_insudb.WBSPRCSELPRO002';
      execute immediate 'truncate table interfaz_insudb.WBSPRCSELPRO003';
      execute immediate 'truncate table interfaz_insudb.WBSPRCSELPRO004';
      execute immediate 'truncate table interfaz_insudb.WBSPRCSELPRO005';
      execute immediate 'truncate table interfaz_insudb.WBSPRCSELPRO006';
      execute immediate 'truncate table interfaz_insudb.WBSPRCSELPRO007';
      execute immediate 'truncate table interfaz_insudb.WBSPRCSELPRO008';
      execute immediate 'truncate table interfaz_insudb.PREMIUM_COMMISION';
      execute immediate 'truncate table interfaz_insudb.PREMIUM_COINSURAN';

   END CLEAN_TMP_AR001;

   PROCEDURE last_row_ZE1ARRET000_AR025
   AS

   NRO_DOCUMENTO NUMBER(10);

   CURSOR TMP025_001 IS
        SELECT DISTINCT ADM_DOCNUM FROM WBSPRCINSPLC001_ORA_LPV
        GROUP BY ADM_DOCNUM;

   CURSOR TMP025_002 IS
        SELECT DISTINCT ADM_DOCNUM FROM WBSPRCINSPLC001_ORA_LPG
        GROUP BY ADM_DOCNUM;

   CURSOR TMP025_003 IS
        SELECT DISTINCT ADM_DOCNUM FROM WBSPRCINSPLC001_INF_LPV
        GROUP BY ADM_DOCNUM;

   CURSOR TMP025_004 IS
        SELECT DISTINCT ADM_DOCNUM FROM WBSPRCINSPLC001_INF_LPG
        GROUP BY ADM_DOCNUM;

   CURSOR TMP025_005 IS
        SELECT DISTINCT ADM_DOCNUM FROM WBSPRCINSPLC001_SGC
        GROUP BY ADM_DOCNUM;

   BEGIN

   OPEN TMP025_001;

       LOOP
            FETCH TMP025_001 INTO NRO_DOCUMENTO;
            EXIT WHEN TMP025_001%NOTFOUND;

            UPDATE WBSPRCINSPLC001_ORA_LPV
            SET NLAST = 1
            WHERE ROWID = (SELECT MAX(ROWID) FROM WBSPRCINSPLC001_ORA_LPV
                         WHERE ADM_DOCNUM = NRO_DOCUMENTO);
       END LOOP;

   OPEN TMP025_002;

       LOOP
            FETCH TMP025_002 INTO NRO_DOCUMENTO;
            EXIT WHEN TMP025_002%NOTFOUND;

            UPDATE WBSPRCINSPLC001_ORA_LPG
            SET NLAST = 1
            WHERE ROWID = (SELECT MAX(ROWID) FROM WBSPRCINSPLC001_ORA_LPG
                         WHERE ADM_DOCNUM = NRO_DOCUMENTO);
       END LOOP;

   OPEN TMP025_003;

       LOOP
            FETCH TMP025_003 INTO NRO_DOCUMENTO;
            EXIT WHEN TMP025_003%NOTFOUND;

            UPDATE WBSPRCINSPLC001_INF_LPV
            SET FLAG = 1
            WHERE ROWID = (SELECT MAX(ROWID) FROM WBSPRCINSPLC001_INF_LPV
                         WHERE ADM_DOCNUM = NRO_DOCUMENTO);
       END LOOP;

   OPEN TMP025_004;

       LOOP
            FETCH TMP025_004 INTO NRO_DOCUMENTO;
            EXIT WHEN TMP025_004%NOTFOUND;

            UPDATE WBSPRCINSPLC001_INF_LPG
            SET FLAG = 1
            WHERE ROWID = (SELECT MAX(ROWID) FROM WBSPRCINSPLC001_INF_LPG
                         WHERE ADM_DOCNUM = NRO_DOCUMENTO);
       END LOOP;

   OPEN TMP025_005;

       LOOP
            FETCH TMP025_005 INTO NRO_DOCUMENTO;
            EXIT WHEN TMP025_005%NOTFOUND;

            UPDATE WBSPRCINSPLC001_SGC
            SET NLAST = 1
            WHERE ROWID = (SELECT MAX(ROWID) FROM WBSPRCINSPLC001_SGC
                         WHERE ADM_DOCNUM = NRO_DOCUMENTO);
       END LOOP;


   END last_row_ZE1ARRET000_AR025;

   PROCEDURE CLEAN_TMP_AR025
   AS
   BEGIN
      execute immediate 'truncate table interfaz_insudb.WBSPRCINSPLC001_ORA_LPV';
      execute immediate 'truncate table interfaz_insudb.WBSPRCINSPLC001_ORA_LPG';
      execute immediate 'truncate table interfaz_insudb.WBSPRCINSPLC001_INF_LPV';
      execute immediate 'truncate table interfaz_insudb.WBSPRCINSPLC001_INF_LPG';
      execute immediate 'truncate table interfaz_insudb.WBSPRCINSPLC001_SGC';
   END CLEAN_TMP_AR025;

END wbspkgdts;
